import numpy as np
a=np.array([[1,2,3,4,5,6,7],[8,9,10,11,12,13,14]])
b=np.array([[9.0,3.0,4.0],[6.0,5.0,4.0]])
print(b)
print(a.ndim)
print(b.ndim)
print(a.dtype)
print(a.itemsize)
print(a.shape)
print(b.shape)
print(b[1,2])
print(b[0, :])
print(b[:,2])
#[row or column,startindex:endindex:stepsize]
print(a[0,1:-1:2])
a[1,5]=20
a[:,2]=5
print(a)
c=np.array([[15,16,],[17,18],[19,20],[21,22]])
#print(c)
#print(c[0,1:,-1])
print(np.zeros((2,3)))
print(np.ones((4,2,2),dtype='int32'))
print(np.full((2,2),99))
print(np.full(a.shape,4))
print(np.random.rand(4,2))
print(np.random.random_sample(a.shape))
print(np.random.randint(8,size=(2,3)))
print(np.identity(3))
m=np.array([[7,9,8]])
print(np.repeat(m,3,axis=0))
print(a+2)
print(a/2)
print(a**2)
print(np.sin(a))
#linear algrebra
g=np.ones((2,3))
h=np.full((3,2),2)
print(g)
print(h)
print(np.matmul(g,h))
p=np.identity(3)
print(np.linalg.det(p))
#statiscs
stats=np.array([[1,2,3,9],[4,5,6,8]])
print(stats)
print(np.min(stats))
#axis ma little bit confuse
print(np.sum(stats))
jd=stats.reshape((1,8))
print(jd)
v1=np.array([1,2,3,4])
v2=np.array([5,6,7,8])
print(np.vstack([v1,v2,v2,v1]))
print(np.hstack([v1,v2]))
